{"ast":null,"code":"var _jsxFileName = \"/home/ack/Learning/React/lightsout-tsx/src/Board/Board.tsx\";\nimport * as React from 'react';\nimport Light from '../Light/Light';\nimport Win from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      setTimeout(() => {\n        if (!this.state.stopped) {\n          this.setState(prevState => {\n            let sec;\n            let min;\n\n            if (prevState.timerSec + 1 === 60) {\n              sec = 0;\n              min = prevState.timerMin + 1;\n            } else {\n              sec = prevState.timerSec + 1;\n              min = prevState.timerMin;\n            }\n\n            return {\n              timerSec: sec,\n              timerMin: min\n            };\n          });\n          this.tick();\n        }\n      }, 1000);\n    };\n\n    this.componentDidMount = () => {\n      this.clearBoard();\n      return;\n    };\n\n    this.clearBoard = () => {\n      const brd = new Array();\n\n      for (let i = 0; i < this.state.size * this.state.size; i++) {\n        brd.push(false);\n      }\n\n      this.setState({\n        lits: brd\n      });\n      return;\n    };\n\n    this.reset = () => {\n      this.clearBoard();\n      this.setState({\n        win: false,\n        level: 0,\n        steps: 0,\n        stopped: true,\n        timerMin: 0,\n        timerSec: 0\n      });\n    };\n\n    this.shuffle = () => {\n      this.clearBoard();\n\n      if (this.state.win || this.state.level === 0) {\n        this.setState({\n          level: this.state.level < this.state.size * this.state.size ? this.state.level + 1 : 1\n        });\n      }\n\n      if (this.state.level < this.state.size * this.state.size + 1) {\n        let clicks = new Array();\n\n        for (let i = 0; i < this.state.level + 1; i++) {\n          let rndm;\n\n          do {\n            rndm = Math.floor(Math.random() * this.state.size * this.state.size);\n          } while (!clicks.indexOf(rndm));\n\n          this.onClickHandler(rndm);\n          clicks.push(rndm);\n        }\n\n        this.setState({\n          steps: 0,\n          stopped: false,\n          timerSec: 0,\n          timerMin: 0\n        });\n        this.props.winHandler(false);\n        this.tick();\n      }\n\n      return;\n    };\n\n    this.onClickHandler = i => {\n      let isPlay;\n      this.setState(prevState => {\n        const lit = prevState.lits.map((lt, index) => {\n          if (index === i - prevState.size || index === i - 1 && i % prevState.size !== 0 || index === i || index === i + 1 && i % prevState.size !== prevState.size - 1 || index === i + prevState.size) {\n            return !lt;\n          } else {\n            return lt;\n          }\n        });\n        isPlay = lit.find(lt => lt);\n        return {\n          lits: lit,\n          steps: prevState.stopped ? prevState.steps : prevState.steps + 1,\n          stopped: isPlay ? false : true,\n          win: isPlay ? false : true\n        };\n      });\n      return;\n    };\n\n    this.state = {\n      level: 0,\n      size: 5,\n      width: 340,\n      lits: [],\n      steps: 0,\n      stopped: true,\n      win: false,\n      timerSec: 0,\n      timerMin: 0\n    };\n  }\n\n  render() {\n    let gridCols = \"\";\n    let gridSize = this.state.width / this.state.size;\n\n    for (let i = 0; i < this.state.size; i++) {\n      if (i > 0) {\n        gridCols += \" \";\n      }\n\n      gridCols += `${gridSize}px`;\n    }\n\n    const boardStyle = {\n      display: \"grid\",\n      gridTemplateColumns: gridCols,\n      gridTemplateRows: gridCols\n    };\n\n    if (this.state.win) {\n      this.props.winHandler(true);\n    }\n\n    const board = Array();\n    this.state.lits.map((lit, index) => {\n      board.push( /*#__PURE__*/_jsxDEV(Light, {\n        lit: lit,\n        buttonSize: this.state.width / this.state.size,\n        onClickHandler: () => this.state.stopped ? () => {} : this.onClickHandler(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this));\n      return true;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: [/*#__PURE__*/_jsxDEV(Win, {\n        started: this.state.level < 1,\n        win: this.state.win,\n        rate: this.state.level / this.state.steps,\n        onReset: () => {\n          this.reset();\n        },\n        onClickHandler: () => {\n          this.shuffle();\n        },\n        currentSteps: this.state.steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boardStyle,\n        children: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps\",\n          children: [\"Steps: \", this.state.steps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: this.state.level > 0 ? \"Level \" + this.state.level : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time: \", this.state.timerMin < 10 ? \"0\" : \"\", this.state.timerMin, \":\", this.state.timerSec < 10 ? \"0\" : \"\", this.state.timerSec]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/ack/Learning/React/lightsout-tsx/src/Board/Board.tsx"],"names":["React","Light","Win","Board","Component","constructor","props","tick","setTimeout","state","stopped","setState","prevState","sec","min","timerSec","timerMin","componentDidMount","clearBoard","brd","Array","i","size","push","lits","reset","win","level","steps","shuffle","clicks","rndm","Math","floor","random","indexOf","onClickHandler","winHandler","isPlay","lit","map","lt","index","find","width","render","gridCols","gridSize","boardStyle","display","gridTemplateColumns","gridTemplateRows","board"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Light from '../Light/Light'\nimport Win from '../Header/Header'\n\ntype BoardProps = {\n  winHandler: Function\n}\n\ninterface BoardStates {\n  size: number,\n  level: number,\n  lits: Array<boolean>,\n  steps: number,\n  stopped: boolean,\n  win: boolean,\n  timerSec: number,\n  timerMin: number\n  width: number\n}\n\nclass Board extends React.Component<BoardProps, BoardStates> {\n  constructor(props: BoardProps) {\n    super(props)\n\n    this.state = {\n      level: 0,\n      size: 5,\n      width: 340,\n      lits: [],\n      steps: 0,\n      stopped: true,\n      win: false,\n      timerSec: 0,\n      timerMin: 0\n    }\n  }\n\n  tick = () => {\n    setTimeout(() => {\n      if (!this.state.stopped) {\n        this.setState((prevState) => {\n          let sec: number\n          let min: number\n          if (prevState.timerSec + 1 === 60) {\n            sec = 0\n            min = prevState.timerMin + 1\n          } else {\n            sec = prevState.timerSec + 1\n            min = prevState.timerMin\n          }\n          return {\n            timerSec: sec,\n            timerMin: min\n          }\n        })\n        this.tick()\n      }\n    }, 1000)\n  }\n\n  componentDidMount = () => {\n    this.clearBoard()\n\n    return\n  }\n\n  clearBoard = () => {\n    const brd = new Array<boolean>()\n    for (let i = 0; i < this.state.size * this.state.size; i++) {\n      brd.push(false)\n    }\n\n    this.setState({\n      lits: brd\n    })\n\n    return\n  }\n\n\n  reset = () => {\n    this.clearBoard()\n    this.setState({\n      win: false,\n      level: 0,\n      steps: 0,\n      stopped: true,\n      timerMin: 0,\n      timerSec: 0\n    })\n  }\n\n\n  shuffle = () => {\n    this.clearBoard()\n\n    if (this.state.win || this.state.level === 0) {\n      this.setState({\n        level: (this.state.level < this.state.size * this.state.size) ? this.state.level + 1 : 1\n      })\n    }\n\n    if (this.state.level < (this.state.size * this.state.size) + 1) {\n      let clicks = new Array<number>()\n      for (let i = 0; i < this.state.level + 1; i++) {\n        let rndm: number | undefined\n\n        do {\n          rndm = Math.floor(Math.random() * this.state.size * this.state.size)\n        }\n        while (!clicks.indexOf(rndm))\n\n        this.onClickHandler(rndm)\n        clicks.push(rndm)\n      }\n\n      this.setState({\n        steps: 0,\n        stopped: false,\n        timerSec: 0,\n        timerMin: 0\n      })\n\n      this.props.winHandler(false)\n      this.tick()\n    }\n\n    return\n  }\n\n  onClickHandler = (i: number) => {\n    let isPlay: boolean | undefined\n\n    this.setState((prevState) => {\n      const lit = prevState.lits.map((lt: boolean, index: number) => {\n        if (\n          (index === i - prevState.size) ||\n          (index === i - 1 && (i % prevState.size) !== 0) ||\n          (index === i) ||\n          (index === i + 1 && (i % prevState.size) !== (prevState.size - 1)) ||\n          (index === i + prevState.size)\n        ) {\n          return !lt\n        } else {\n          return lt\n        }\n      })\n\n      isPlay = lit.find((lt: boolean) => lt)\n\n      return {\n        lits: lit,\n        steps: (prevState.stopped) ? prevState.steps : prevState.steps + 1,\n        stopped: isPlay ? false : true,\n        win: isPlay ? false : true\n      }\n    })\n\n    return\n  }\n\n  render() {\n    let gridCols: string = \"\"\n    let gridSize: number = this.state.width / this.state.size\n    for (let i = 0; i < this.state.size; i++) {\n      if (i > 0) {\n        gridCols += \" \"\n      }\n\n      gridCols += `${gridSize}px`\n    }\n\n    const boardStyle = {\n      display: \"grid\",\n      gridTemplateColumns: gridCols,\n      gridTemplateRows: gridCols,\n    }\n\n    if (this.state.win) {\n      this.props.winHandler(true)\n    }\n\n    const board = Array<JSX.Element>()\n\n    this.state.lits.map((lit: boolean, index: number) => {\n      board.push(\n        <Light\n          key={index}\n          lit={lit}\n          buttonSize={this.state.width / this.state.size}\n          onClickHandler={() => (this.state.stopped) ? () => { } : this.onClickHandler(index)}\n        />\n      )\n\n      return true\n    })\n\n    return (\n      <div className=\"board-container\">\n        <Win started={this.state.level < 1} win={this.state.win} rate={this.state.level / this.state.steps} onReset={() => { this.reset() }} onClickHandler={() => { this.shuffle() }} currentSteps={this.state.steps} />\n        <div style={boardStyle}>\n          {board}\n        </div>\n        <div className=\"counters\">\n          <div className=\"steps\">Steps: {this.state.steps}</div>\n          <div className=\"level\">{(this.state.level > 0) ? \"Level \" + this.state.level : \"\"}</div>\n          <div className=\"timer\">Time: {(this.state.timerMin < 10) ? \"0\" : \"\"}{this.state.timerMin}:{(this.state.timerSec < 10) ? \"0\" : \"\"}{this.state.timerSec}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}