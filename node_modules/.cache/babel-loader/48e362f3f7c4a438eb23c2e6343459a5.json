{"ast":null,"code":"var _jsxFileName = \"/home/ack/Learning/React/lightsout-tsx/src/Board/Board.tsx\";\nimport * as React from 'react';\nimport Light from '../Light/Light';\nimport Win from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      setTimeout(() => {\n        if (!this.state.stopped) {\n          this.setState(prevState => {\n            let sec;\n            let min;\n\n            if (prevState.timerSec + 1 === 60) {\n              sec = 0;\n              min = prevState.timerMin + 1;\n            } else {\n              sec = prevState.timerSec + 1;\n              min = prevState.timerMin;\n            }\n\n            return {\n              timerSec: sec,\n              timerMin: min\n            };\n          });\n          this.tick();\n        }\n      }, 1000);\n    };\n\n    this.componentDidMount = () => {\n      this.clearBoard();\n      return;\n    };\n\n    this.clearBoard = () => {\n      const brd = new Array();\n\n      for (let i = 0; i < this.state.size * this.state.size; i++) {\n        brd.push(false);\n      }\n\n      this.setState({\n        lits: brd\n      });\n      return;\n    };\n\n    this.reset = () => {\n      this.clearBoard();\n      this.setState({\n        win: false,\n        level: 0,\n        steps: 0,\n        stopped: true,\n        timerMin: 0,\n        timerSec: 0\n      });\n    };\n\n    this.shuffle = () => {\n      this.clearBoard();\n\n      if (this.state.win || this.state.level === 0) {\n        this.setState({\n          level: this.state.level < this.state.size * this.state.size ? this.state.level + 1 : 1\n        });\n      }\n\n      if (this.state.level < this.state.size * this.state.size + 1) {\n        let clicks = new Array();\n\n        for (let i = 0; i < this.state.level + 1; i++) {\n          let rndm;\n\n          do {\n            rndm = Math.floor(Math.random() * this.state.size * this.state.size);\n          } while (!clicks.indexOf(rndm));\n\n          this.onClickHandler(rndm);\n          clicks.push(rndm);\n        }\n\n        this.setState({\n          steps: 0,\n          stopped: false,\n          timerSec: 0,\n          timerMin: 0\n        });\n        this.props.winHandler(false);\n        this.tick();\n      }\n\n      return;\n    };\n\n    this.onClickHandler = i => {\n      let isPlay;\n      this.setState(prevState => {\n        const lit = prevState.lits.map((lt, index) => {\n          if (index === i - prevState.size || index === i - 1 && i % prevState.size !== 0 || index === i || index === i + 1 && i % prevState.size !== prevState.size - 1 || index === i + prevState.size) {\n            return !lt;\n          } else {\n            return lt;\n          }\n        });\n        isPlay = lit.find(lt => lt);\n        return {\n          lits: lit,\n          steps: prevState.stopped ? prevState.steps : prevState.steps + 1,\n          stopped: isPlay ? false : true,\n          win: isPlay ? false : true\n        };\n      });\n      return;\n    };\n\n    this.state = {\n      level: 0,\n      size: 5,\n      width: 340,\n      lits: [],\n      steps: 0,\n      stopped: true,\n      win: false,\n      timerSec: 0,\n      timerMin: 0\n    };\n  }\n\n  render() {\n    let gridCols = \"\";\n    let gridSize = this.state.width / this.state.size;\n\n    for (let i = 0; i < this.state.size; i++) {\n      if (i > 0) {\n        gridCols += \" \";\n      }\n\n      gridCols += `${gridSize}px`;\n    }\n\n    const boardStyle = {\n      display: \"grid\",\n      gridTemplateColumns: gridCols,\n      gridTemplateRows: gridCols\n    };\n\n    if (this.state.win) {\n      this.props.winHandler(true);\n    }\n\n    const board = Array();\n    this.state.lits.map((lit, index) => {\n      board.push( /*#__PURE__*/_jsxDEV(Light, {\n        lit: lit,\n        buttonSize: this.state.width / this.state.size,\n        onClickHandler: () => this.state.stopped ? () => {} : this.onClickHandler(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this));\n      return true;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: [/*#__PURE__*/_jsxDEV(Win, {\n        started: this.state.level < 1,\n        win: this.state.win,\n        rate: this.state.level / this.state.steps,\n        onReset: () => {\n          this.reset();\n        },\n        onClickHandler: () => {\n          this.shuffle();\n        },\n        currentSteps: this.state.steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: boardStyle,\n        children: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps\",\n          children: [\"Steps: \", this.state.steps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: this.state.level > 0 ? \"Level \" + this.state.level : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Time: \", this.state.timerMin < 10 ? \"0\" : \"\", this.state.timerMin, \":\", this.state.timerSec < 10 ? \"0\" : \"\", this.state.timerSec]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/ack/Learning/React/lightsout-tsx/src/Board/Board.tsx"],"names":["React","Light","Win","Board","Component","constructor","props","tick","setTimeout","state","stopped","setState","prevState","sec","min","timerSec","timerMin","componentDidMount","clearBoard","brd","Array","i","size","push","lits","reset","win","level","steps","shuffle","clicks","rndm","Math","floor","random","indexOf","onClickHandler","winHandler","isPlay","lit","map","lt","index","find","width","render","gridCols","gridSize","boardStyle","display","gridTemplateColumns","gridTemplateRows","board"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport Light from '../Light/Light'\nimport Win from '../Header/Header'\n\ntype BoardProps = {\n    winHandler: Function\n}\n\ninterface BoardStates {\n    size: number,\n    level: number,\n    lits: Array<boolean>,\n    steps: number,\n    stopped: boolean,\n    win: boolean,\n    timerSec: number,\n    timerMin: number\n    width: number\n}\n\nclass Board extends React.Component<BoardProps, BoardStates> {\n    constructor(props: BoardProps) {\n        super(props)\n\n        this.state = {\n            level: 0,\n            size: 5,\n            width: 340,\n            lits: [],\n            steps: 0,\n            stopped: true,\n            win: false,\n            timerSec: 0,\n            timerMin: 0\n        }\n    }\n\n    tick = () => {\n        setTimeout(() => {\n            if (!this.state.stopped) {\n                this.setState((prevState) => {\n                    let sec: number\n                    let min: number\n                    if (prevState.timerSec + 1 === 60) {\n                        sec = 0\n                        min = prevState.timerMin + 1\n                    } else {\n                        sec = prevState.timerSec + 1\n                        min = prevState.timerMin\n                    }\n                    return {\n                        timerSec: sec,\n                        timerMin: min\n                    }\n                })\n                this.tick()\n            }\n        }, 1000)\n    }\n\n    componentDidMount = () => {\n        this.clearBoard()\n\n        return\n    }\n\n    clearBoard = () => {\n        const brd = new Array<boolean>()\n        for (let i = 0; i < this.state.size * this.state.size; i++) {\n            brd.push(false)\n        }\n\n        this.setState({\n            lits: brd\n        })\n\n        return\n    }\n\n\n    reset = () => {\n        this.clearBoard()\n        this.setState({\n            win: false,\n            level: 0,\n            steps: 0,\n            stopped: true,\n            timerMin: 0,\n            timerSec: 0\n        })\n    }\n\n\n    shuffle = () => {\n        this.clearBoard()\n\n        if (this.state.win || this.state.level === 0) {\n            this.setState({\n                level: (this.state.level < this.state.size * this.state.size) ? this.state.level + 1 : 1\n            })\n        }\n\n        if (this.state.level < (this.state.size * this.state.size) + 1) {\n            let clicks = new Array<number>()\n            for (let i = 0; i < this.state.level + 1; i++) {\n                let rndm: number | undefined\n\n                do {\n                    rndm = Math.floor(Math.random() * this.state.size * this.state.size)\n                }\n                while (!clicks.indexOf(rndm))\n\n                this.onClickHandler(rndm)\n                clicks.push(rndm)\n            }\n\n            this.setState({\n                steps: 0,\n                stopped: false,\n                timerSec: 0,\n                timerMin: 0\n            })\n\n            this.props.winHandler(false)\n            this.tick()\n        }\n\n        return\n    }\n\n    onClickHandler = (i: number) => {\n        let isPlay: boolean | undefined\n\n        this.setState((prevState) => {\n            const lit = prevState.lits.map((lt: boolean, index: number) => {\n                if (\n                    (index === i - prevState.size) ||\n                    (index === i - 1 && (i % prevState.size) !== 0) ||\n                    (index === i) ||\n                    (index === i + 1 && (i % prevState.size) !== (prevState.size - 1)) ||\n                    (index === i + prevState.size)\n                ) {\n                    return !lt\n                } else {\n                    return lt\n                }\n            })\n\n            isPlay = lit.find((lt: boolean) => lt)\n\n            return {\n                lits: lit,\n                steps: (prevState.stopped) ? prevState.steps : prevState.steps + 1,\n                stopped: isPlay ? false : true,\n                win: isPlay ? false : true\n            }\n        })\n\n        return\n    }\n\n    render() {\n        let gridCols:string = \"\"\n        let gridSize:number = this.state.width / this.state.size\n        for (let i = 0; i < this.state.size; i++) {\n            if (i > 0) {\n                gridCols += \" \"\n            }\n\n            gridCols += `${gridSize}px`\n        }\n\n        const boardStyle = {\n            display: \"grid\",\n            gridTemplateColumns: gridCols,\n            gridTemplateRows: gridCols,\n        }\n\n        if (this.state.win) {\n            this.props.winHandler(true)\n        }\n\n        const board = Array<JSX.Element>()\n\n        this.state.lits.map((lit: boolean, index: number) => {\n            board.push(\n                <Light\n                    key={index}\n                    lit={lit}\n                    buttonSize={this.state.width / this.state.size}\n                    onClickHandler={() => (this.state.stopped) ? () => { } : this.onClickHandler(index)}\n                />\n            )\n\n            return true\n        })\n\n        return (\n            <div className=\"board-container\">\n                <Win started={ this.state.level < 1 } win={this.state.win} rate={this.state.level / this.state.steps} onReset={ () => { this.reset() }} onClickHandler={() => { this.shuffle() }} currentSteps={this.state.steps} />\n                <div style={boardStyle}>\n                    {board}\n                </div>\n                <div className=\"counters\">\n                    <div className=\"steps\">Steps: {this.state.steps}</div>\n                    <div className=\"level\">{(this.state.level > 0) ? \"Level \" + this.state.level : \"\"}</div>\n                    <div className=\"timer\">Time: {(this.state.timerMin < 10) ? \"0\" : \"\"}{this.state.timerMin}:{(this.state.timerSec < 10) ? \"0\" : \"\"}{this.state.timerSec}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}