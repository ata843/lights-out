{"ast":null,"code":"var _jsxFileName = \"/home/ack/Learning/React/lightsout-tsx/src/Header/Header.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Win extends React.Component {\n  render() {\n    let result;\n\n    if (this.props.rate === 1) {\n      result = \"Flawless!\";\n    } else if (this.props.rate > 1) {\n      result = \"Excellent!\";\n    } else {\n      result = \"Ok.\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: this.props.win ? 'show-result' : '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.onReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !this.props.started && !this.props.win,\n          onClick: this.props.onClickHandler,\n          children: this.props.started ? \"New\\nGame\" : \"Next\\nLevel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Win;","map":{"version":3,"sources":["/home/ack/Learning/React/lightsout-tsx/src/Header/Header.tsx"],"names":["React","Win","Component","render","result","props","rate","win","onReset","started","onClickHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAWA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAgD;AAC9CC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAJ;;AAEA,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,CAAxB,EAA2B;AACzBF,MAAAA,MAAM,GAAG,WAAT;AACD,KAFD,MAEO,IAAI,KAAKC,KAAL,CAAWC,IAAX,GAAkB,CAAtB,EAAyB;AAC9BF,MAAAA,MAAM,GAAG,YAAT;AACD,KAFM,MAEA;AACLA,MAAAA,MAAM,GAAG,KAAT;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWE,GAAX,GAAiB,aAAjB,GAAiC,EAAhD;AAAA,+BAAoD;AAAA,oBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,QAAQ,EAAE,CAAC,KAAKH,KAAL,CAAWI,OAAZ,IAAuB,CAAC,KAAKJ,KAAL,CAAWE,GAArD;AAA0D,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,cAA9E;AAAA,oBAA+F,KAAKL,KAAL,CAAWI,OAAX,GAAqB,WAArB,GAAmC;AAAlI;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AArB6C;;AAwBhD,eAAeR,GAAf","sourcesContent":["import React from 'react'\n\ntype WinProps = {\n  started: boolean\n  win: boolean\n  rate: number\n  onClickHandler: React.MouseEventHandler<HTMLButtonElement>\n  onReset: React.MouseEventHandler<HTMLButtonElement>\n  currentSteps: number\n}\n\nclass Win extends React.Component<WinProps, {}> {\n  render() {\n    let result: string\n\n    if (this.props.rate === 1) {\n      result = \"Flawless!\"\n    } else if (this.props.rate > 1) {\n      result = \"Excellent!\"\n    } else {\n      result = \"Ok.\"\n    }\n\n    return (\n      <div className=\"controls\">\n        <h2 className={this.props.win ? 'show-result' : ''}><span>{result}</span></h2>\n        <div className=\"buttons\">\n          <button onClick={this.props.onReset}>Reset</button>\n          <button disabled={!this.props.started && !this.props.win} onClick={this.props.onClickHandler}>{this.props.started ? \"New\\nGame\" : \"Next\\nLevel\"}</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Win"]},"metadata":{},"sourceType":"module"}